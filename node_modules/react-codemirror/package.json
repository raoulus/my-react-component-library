{
  "_args": [
    [
      {
        "raw": "react-codemirror@0.3.0",
        "scope": null,
        "escapedName": "react-codemirror",
        "name": "react-codemirror",
        "rawSpec": "0.3.0",
        "spec": "0.3.0",
        "type": "version"
      },
      "/Users/rja/apps/github/styleguide"
    ]
  ],
  "_from": "react-codemirror@0.3.0",
  "_id": "react-codemirror@0.3.0",
  "_inCache": true,
  "_location": "/react-codemirror",
  "_nodeVersion": "7.1.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/react-codemirror-0.3.0.tgz_1479785659728_0.6168483623769134"
  },
  "_npmUser": {
    "name": "jedwatson",
    "email": "jed.watson@me.com"
  },
  "_npmVersion": "3.10.9",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-codemirror@0.3.0",
    "scope": null,
    "escapedName": "react-codemirror",
    "name": "react-codemirror",
    "rawSpec": "0.3.0",
    "spec": "0.3.0",
    "type": "version"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/react-codemirror/-/react-codemirror-0.3.0.tgz",
  "_shasum": "cd6bd6ef458ec1e035cfd8b3fe7b30c8c7883c6c",
  "_shrinkwrap": null,
  "_spec": "react-codemirror@0.3.0",
  "_where": "/Users/rja/apps/github/styleguide",
  "author": {
    "name": "Jed Watson"
  },
  "browserify-shim": {
    "react": "global:React"
  },
  "bugs": {
    "url": "https://github.com/JedWatson/react-codemirror/issues"
  },
  "dependencies": {
    "classnames": "^2.2.5",
    "codemirror": "^5.18.2",
    "lodash.debounce": "^4.0.8"
  },
  "description": "Codemirror",
  "devDependencies": {
    "gulp": "^3.9.1",
    "happiness": "^7.1.2",
    "react": "^15.3.1",
    "react-component-gulp-tasks": "^0.7.7",
    "react-dom": "^15.3.1"
  },
  "directories": {},
  "dist": {
    "shasum": "cd6bd6ef458ec1e035cfd8b3fe7b30c8c7883c6c",
    "tarball": "https://registry.npmjs.org/react-codemirror/-/react-codemirror-0.3.0.tgz"
  },
  "gitHead": "930600810e5ceb4ad426a66098ecf1404d9e32c3",
  "happiness": {
    "ignore": [
      "**/.publish/**",
      "**/dist/**",
      "**/lib/**"
    ]
  },
  "homepage": "https://github.com/JedWatson/react-codemirror",
  "keywords": [
    "react",
    "react-component",
    "codemirror",
    "editor",
    "code"
  ],
  "license": "MIT",
  "main": "lib/Codemirror.js",
  "maintainers": [
    {
      "name": "jedwatson",
      "email": "jed.watson@me.com"
    }
  ],
  "name": "react-codemirror",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": ">=0.14 <16",
    "react-dom": ">=0.14 <16"
  },
  "readme": "# Codemirror\n\nThe excellent [CodeMirror](https://codemirror.net) editor as a [React.js](http://facebook.github.io/react) component.\n\n\n## Demo & Examples\n\nLive demo: [JedWatson.github.io/react-codemirror](http://JedWatson.github.io/react-codemirror)\n\nTo build the examples locally, run:\n\n```\nnpm install\nnpm start\n```\n\nThen open [`localhost:8000`](http://localhost:8000) in a browser.\n\n\n## Installation\n\nThe easiest way to use codemirror is to install it from NPM and include it in your own React build process (using [Browserify](http://browserify.org), [Webpack](http://webpack.github.io/), etc).\n\nYou can also use the standalone build by including `dist/react-codemirror.js` in your page. If you use this, make sure you have already included React, and it is available as a global variable.\n\n```\nnpm install react-codemirror --save\n```\n\n\n## Usage\n\nRequire the CodeMirror component and render it with JSX:\n\n```javascript\nvar React = require('react');\nvar CodeMirror = require('react-codemirror');\n\nvar App = React.createClass({\n\tgetInitialState: function() {\n\t\treturn {\n\t\t\tcode: \"// Code\",\n\t\t};\n\t},\n\tupdateCode: function(newCode) {\n\t\tthis.setState({\n\t\t\tcode: newCode,\n\t\t});\n\t},\n\trender: function() {\n\t\tvar options = {\n\t\t\tlineNumbers: true,\n\t\t};\n\t\treturn <CodeMirror value={this.state.code} onChange={this.updateCode} options={options} />\n\t}\n});\n\nReact.render(<App />, document.getElementById('app'));\n```\n\n### Include the CSS\n\nEnsure that CodeMirror's stylesheet `codemirror.css` is loaded.\n\nIf you're using LESS (similar for Sass) you can import the css directly from the codemirror package, as shown in [example.less](example/src/example.less):\n\n```less\n@import (inline) \"./node_modules/codemirror/lib/codemirror.css\";\n```\n\nIf you're using Webpack with the css loader, you can require the codemirror css in your application instead:\n\n```js\nrequire('codemirror/lib/codemirror.css');\n```\n\nAlternatively, you can explicitly link the `codemirror.css` file from the CodeMirror project in your index.html file, e.g `<link href=\"css/codemirror.css\"  rel=\"stylesheet\">`.\n\n### Methods\n\n* `focus` focuses the CodeMirror instance\n* `getCodeMirror` returns the CodeMirror instance, available .\n\nYou can interact with the CodeMirror instance using a `ref` and the `getCodeMirror()` method after the `componentDidMount` lifecycle event has fired (including inside the `componentDidMount` event in a parent Component).\n\n### Properties\n\n* `autoSave` `Boolean` automatically persist changes to underlying textarea (default false)\n* `value` `String` the editor value\n* `preserveScrollPosition` `Boolean=false` Preserve previous scroll position after updating value\n* `options` `Object (newValue)` options passed to the CodeMirror instance\n* `onChange` `Function (newValue)` called when a change is made\n* `onFocusChange` `Function (focused)` called when the editor is focused or loses focus\n\nSee the [CodeMirror API Docs](https://codemirror.net/doc/manual.html#api) for the available options.\n\n### Using Language Modes\n\nSeveral [language modes](https://codemirror.net/mode/) are included with CodeMirror for syntax highlighting.\n\nBy default (to optimise bundle size) all modes are not included. To enable syntax highlighting:\n\n* install the `codemirror` package dependency (in addition to `react-codemirror`)\n* require the language modes you wish to make available _after_ you require `react-codemirror` itself\n* set the `mode` option in the `options` object\n\n```js\nvar React = require('react');\nvar CodeMirror = require('react-codemirror');\nrequire('codemirror/mode/javascript/javascript');\nrequire('codemirror/mode/xml/xml');\nrequire('codemirror/mode/markdown/markdown');\n\n<CodeMirror ... options={{\n\tmode: 'javascript',\n}} />\n```\n\nSee the [example source](https://github.com/JedWatson/react-codemirror/blob/master/example/src/example.js) for a reference implementation including JavaScript and markdown syntax highlighting.\n\n### License\n\nMIT. Copyright (c) 2016 Jed Watson.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/JedWatson/react-codemirror.git"
  },
  "scripts": {
    "build": "gulp clean && NODE_ENV=production gulp build",
    "bump": "gulp bump",
    "bump:major": "gulp bump:major",
    "bump:minor": "gulp bump:minor",
    "examples": "gulp dev:server",
    "lint": "happiness",
    "publish:site": "gulp publish:examples",
    "release": "gulp release",
    "start": "gulp dev",
    "test": "echo \"no tests yet\" && exit 0",
    "watch": "gulp watch:lib"
  },
  "version": "0.3.0"
}
